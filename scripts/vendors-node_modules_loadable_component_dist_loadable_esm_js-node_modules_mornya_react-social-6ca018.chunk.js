(self["webpackChunkreact_demo_social"] = self["webpackChunkreact_demo_social"] || []).push([["vendors-node_modules_loadable_component_dist_loadable_esm_js-node_modules_mornya_react-social-6ca018"],{

/***/ "./node_modules/@mornya/react-social-libs/dist/res/social/share-128x128.png":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/c06fb390c6518f227f34.png";

/***/ }),

/***/ "../../mornya-react-vessel/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../mornya-react-vessel/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!../../mornya-react-vessel/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!../../mornya-react-vessel/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!./node_modules/@mornya/react-social-libs/dist/res/share.css":
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _mornya_react_vessel_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../../mornya-react-vessel/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _mornya_react_vessel_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mornya_react_vessel_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mornya_react_vessel_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../../mornya-react-vessel/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _mornya_react_vessel_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_mornya_react_vessel_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _mornya_react_vessel_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../../mornya-react-vessel/node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _mornya_react_vessel_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_mornya_react_vessel_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _social_share_128x128_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/@mornya/react-social-libs/dist/res/social/share-128x128.png");
// Imports




var ___CSS_LOADER_EXPORT___ = _mornya_react_vessel_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_mornya_react_vessel_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _mornya_react_vessel_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_social_share_128x128_png__WEBPACK_IMPORTED_MODULE_3__);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/* line 7, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  background-color: transparent;\n  font-size: 0;\n  /* for align between widgets */\n  cursor: pointer; }\n\n/* line 15, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share + .mornya-lib.sns-share {\n  margin-left: 4px; }\n\n/* line 17, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button {\n  position: relative;\n  display: inline-block;\n  min-width: 8px;\n  min-height: 8px;\n  max-width: 128px;\n  max-height: 128px; }\n\n/* line 24, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span {\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: inline-block;\n  overflow: hidden;\n  background-image: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");\n  background-repeat: no-repeat; }\n\n/* line 32, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.band {\n  width: 128px;\n  height: 128px;\n  background-position: -128px 0; }\n\n/* line 36, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.clipboard {\n  width: 128px;\n  height: 128px;\n  background-position: -256px -256px; }\n\n/* line 40, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.email {\n  width: 128px;\n  height: 128px;\n  background-position: 0 -128px; }\n\n/* line 44, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.facebook {\n  width: 128px;\n  height: 128px;\n  background-position: -128px -128px; }\n\n/* line 48, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.flipboard {\n  width: 128px;\n  height: 128px;\n  background-position: -256px 0; }\n\n/* line 52, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.gmail {\n  width: 128px;\n  height: 128px;\n  background-position: -256px -128px; }\n\n/* line 56, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.googlebookmarks {\n  width: 128px;\n  height: 128px;\n  background-position: 0 -256px; }\n\n/* line 60, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.kakaostory {\n  width: 128px;\n  height: 128px;\n  background-position: -128px -256px; }\n\n/* line 64, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.kakaotalk {\n  width: 128px;\n  height: 128px;\n  background-position: 0 0; }\n\n/* line 68, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.line {\n  width: 128px;\n  height: 128px;\n  background-position: -384px 0; }\n\n/* line 72, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.linkedin {\n  width: 128px;\n  height: 128px;\n  background-position: -384px -128px; }\n\n/* line 76, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.naver {\n  width: 128px;\n  height: 128px;\n  background-position: -384px -256px; }\n\n/* line 80, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.naverblog {\n  width: 128px;\n  height: 128px;\n  background-position: 0 -384px; }\n\n/* line 84, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.sms {\n  width: 128px;\n  height: 128px;\n  background-position: -128px -384px; }\n\n/* line 88, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.telegram {\n  width: 128px;\n  height: 128px;\n  background-position: -256px -384px; }\n\n/* line 92, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.tumblr {\n  width: 128px;\n  height: 128px;\n  background-position: -384px -384px; }\n\n/* line 96, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-share > .share-default-button.x128 > span.twitter {\n  width: 128px;\n  height: 128px;\n  background-position: -512px 0; }\n\n/* line 101, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-widget {\n  display: inline-block;\n  vertical-align: top;\n  font-size: 0;\n  /* for align between widgets */ }\n\n/* line 106, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-widget + .mornya-lib.sns-widget {\n  margin-left: 4px; }\n\n/* line 108, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-widget.flipboard a[data-flip-widget=\"flipit\"] {\n  font-size: 12px;\n  color: #474747; }\n\n/* line 111, node_modules/@mornya/react-social-libs/dist/res/share.css */\n.mornya-lib.sns-widget.twitter .twitter-dm-button.twitter-dm-button-rendered {\n  vertical-align: top; }\n\n/*# sourceMappingURL=social-share.css.map*/\n", "",{"version":3,"sources":["webpack://./share.css"],"names":[],"mappings":"AAAA,sEAAsE;AAMtE;EACE,SAAS;EACT,UAAU;EACV,SAAS;EACT,6BAA6B;EAC7B,YAAY;EACZ,8BAAA;EACA,eAAe,EAAA;;AAHjB,uEAAuE;AAIrE;EACE,gBAAgB,EAAA;;AADpB,uEAAuE;AAErE;EACE,kBAAkB;EAClB,qBAAqB;EACrB,cAAc;EACd,eAAe;EACf,gBAAgB;EAChB,iBAAiB,EAAA;;AACrB,uEAAuE;AAAnE;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,qBAAqB;EACrB,gBAAgB;EAChB,yDAA4D;EAC5D,4BAA4B,EAAA;;AAGlC,uEAAuE;AAFjE;EACE,YAAY;EACZ,aAAa;EACb,6BAA6B,EAAA;;AAKrC,uEAAuE;AAJjE;EACE,YAAY;EACZ,aAAa;EACb,kCAAkC,EAAA;;AAO1C,uEAAuE;AANjE;EACE,YAAY;EACZ,aAAa;EACb,6BAA6B,EAAA;;AASrC,uEAAuE;AARjE;EACE,YAAY;EACZ,aAAa;EACb,kCAAkC,EAAA;;AAW1C,uEAAuE;AAVjE;EACE,YAAY;EACZ,aAAa;EACb,6BAA6B,EAAA;;AAarC,uEAAuE;AAZjE;EACE,YAAY;EACZ,aAAa;EACb,kCAAkC,EAAA;;AAe1C,uEAAuE;AAdjE;EACE,YAAY;EACZ,aAAa;EACb,6BAA6B,EAAA;;AAiBrC,uEAAuE;AAhBjE;EACE,YAAY;EACZ,aAAa;EACb,kCAAkC,EAAA;;AAmB1C,uEAAuE;AAlBjE;EACE,YAAY;EACZ,aAAa;EACb,wBAAwB,EAAA;;AAqBhC,uEAAuE;AApBjE;EACE,YAAY;EACZ,aAAa;EACb,6BAA6B,EAAA;;AAuBrC,uEAAuE;AAtBjE;EACE,YAAY;EACZ,aAAa;EACb,kCAAkC,EAAA;;AAyB1C,uEAAuE;AAxBjE;EACE,YAAY;EACZ,aAAa;EACb,kCAAkC,EAAA;;AA2B1C,uEAAuE;AA1BjE;EACE,YAAY;EACZ,aAAa;EACb,6BAA6B,EAAA;;AA6BrC,uEAAuE;AA5BjE;EACE,YAAY;EACZ,aAAa;EACb,kCAAkC,EAAA;;AA+B1C,uEAAuE;AA9BjE;EACE,YAAY;EACZ,aAAa;EACb,kCAAkC,EAAA;;AAiC1C,uEAAuE;AAhCjE;EACE,YAAY;EACZ,aAAa;EACb,kCAAkC,EAAA;;AAmC1C,uEAAuE;AAlCjE;EACE,YAAY;EACZ,aAAa;EACb,6BAA6B,EAAA;;AAqCrC,wEAAwE;AAnCxE;EACE,qBAAqB;EACrB,mBAAmB;EACnB,YAAY;EACZ,8BAAA,EAA+B;;AAsCjC,wEAAwE;AArCtE;EACE,gBAAgB,EAAA;;AAwCpB,wEAAwE;AAvCtE;EACE,eAAe;EACf,cAAc,EAAA;;AA0ClB,wEAAwE;AAzCtE;EACE,mBAAmB,EAAA;;AAGvB,0CAAA","sourcesContent":["$static-path: \"/Users/mornya/dev/@Github/react-demo-social/dist\";\n$timestamp: \"2109140024\";\n$NODE_ENV: \"development\";\n$BUILD_ENV: \"ghpages\";\n$PUBLIC_URL: \"react-demo-social\";\n\n.mornya-lib.sns-share {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  background-color: transparent;\n  font-size: 0;\n  /* for align between widgets */\n  cursor: pointer; }\n  .mornya-lib.sns-share + .mornya-lib.sns-share {\n    margin-left: 4px; }\n  .mornya-lib.sns-share > .share-default-button {\n    position: relative;\n    display: inline-block;\n    min-width: 8px;\n    min-height: 8px;\n    max-width: 128px;\n    max-height: 128px; }\n    .mornya-lib.sns-share > .share-default-button.x128 > span {\n      position: absolute;\n      top: 0;\n      left: 0;\n      display: inline-block;\n      overflow: hidden;\n      background-image: url(./social/share-128x128.png?v=c32e0a93);\n      background-repeat: no-repeat; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.band {\n        width: 128px;\n        height: 128px;\n        background-position: -128px 0; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.clipboard {\n        width: 128px;\n        height: 128px;\n        background-position: -256px -256px; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.email {\n        width: 128px;\n        height: 128px;\n        background-position: 0 -128px; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.facebook {\n        width: 128px;\n        height: 128px;\n        background-position: -128px -128px; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.flipboard {\n        width: 128px;\n        height: 128px;\n        background-position: -256px 0; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.gmail {\n        width: 128px;\n        height: 128px;\n        background-position: -256px -128px; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.googlebookmarks {\n        width: 128px;\n        height: 128px;\n        background-position: 0 -256px; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.kakaostory {\n        width: 128px;\n        height: 128px;\n        background-position: -128px -256px; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.kakaotalk {\n        width: 128px;\n        height: 128px;\n        background-position: 0 0; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.line {\n        width: 128px;\n        height: 128px;\n        background-position: -384px 0; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.linkedin {\n        width: 128px;\n        height: 128px;\n        background-position: -384px -128px; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.naver {\n        width: 128px;\n        height: 128px;\n        background-position: -384px -256px; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.naverblog {\n        width: 128px;\n        height: 128px;\n        background-position: 0 -384px; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.sms {\n        width: 128px;\n        height: 128px;\n        background-position: -128px -384px; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.telegram {\n        width: 128px;\n        height: 128px;\n        background-position: -256px -384px; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.tumblr {\n        width: 128px;\n        height: 128px;\n        background-position: -384px -384px; }\n      .mornya-lib.sns-share > .share-default-button.x128 > span.twitter {\n        width: 128px;\n        height: 128px;\n        background-position: -512px 0; }\n\n.mornya-lib.sns-widget {\n  display: inline-block;\n  vertical-align: top;\n  font-size: 0;\n  /* for align between widgets */ }\n  .mornya-lib.sns-widget + .mornya-lib.sns-widget {\n    margin-left: 4px; }\n  .mornya-lib.sns-widget.flipboard a[data-flip-widget=\"flipit\"] {\n    font-size: 12px;\n    color: #474747; }\n  .mornya-lib.sns-widget.twitter .twitter-dm-button.twitter-dm-button-rendered {\n    vertical-align: top; }\n\n\n/*# sourceMappingURL=social-share.css.map*/"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _assertThisInitialized)
/* harmony export */ });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}
 void function register() { /* react-hot-loader/webpack */ var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined; if (!reactHotLoader) { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : exports; /* eslint-enable camelcase, no-undef */ if (!webpackExports) { return; } if (typeof webpackExports === 'function') { reactHotLoader.register(webpackExports, 'module.exports', "/Users/mornya/dev/@Github/react-demo-social/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } reactHotLoader.register(namedExport, key, "/Users/mornya/dev/@Github/react-demo-social/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"); } }(); 

/***/ }),

/***/ "./node_modules/@loadable/component/dist/loadable.esm.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": () => (/* binding */ __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED),
/* harmony export */   "lazy": () => (/* binding */ lazy$2),
/* harmony export */   "loadableReady": () => (/* binding */ loadableReady)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/react-is/index.js");
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6__);








/* eslint-disable import/prefer-default-export */
function invariant(condition, message) {
  if (condition) return;
  var error = new Error("loadable: " + message);
  error.framesToPop = 1;
  error.name = 'Invariant Violation';
  throw error;
}
function warn(message) {
  // eslint-disable-next-line no-console
  console.warn("loadable: " + message);
}

var Context = /*#__PURE__*/
react__WEBPACK_IMPORTED_MODULE_0___default().createContext();

var LOADABLE_REQUIRED_CHUNKS_KEY = '__LOADABLE_REQUIRED_CHUNKS__';
function getRequiredChunkKey(namespace) {
  return "" + namespace + LOADABLE_REQUIRED_CHUNKS_KEY;
}

var sharedInternals = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getRequiredChunkKey: getRequiredChunkKey,
  invariant: invariant,
  Context: Context
});

var LOADABLE_SHARED = {
  initialChunks: {}
};

var STATUS_PENDING = 'PENDING';
var STATUS_RESOLVED = 'RESOLVED';
var STATUS_REJECTED = 'REJECTED';

function resolveConstructor(ctor) {
  if (typeof ctor === 'function') {
    return {
      requireAsync: ctor,
      resolve: function resolve() {
        return undefined;
      },
      chunkName: function chunkName() {
        return undefined;
      }
    };
  }

  return ctor;
}

var withChunkExtractor = function withChunkExtractor(Component) {
  var LoadableWithChunkExtractor = function LoadableWithChunkExtractor(props) {
    return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Context.Consumer, null, function (extractor) {
      return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Component, Object.assign({
        __chunkExtractor: extractor
      }, props));
    });
  };

  if (Component.displayName) {
    LoadableWithChunkExtractor.displayName = Component.displayName + "WithChunkExtractor";
  }

  return LoadableWithChunkExtractor;
};

var identity = function identity(v) {
  return v;
};

function createLoadable(_ref) {
  var _ref$defaultResolveCo = _ref.defaultResolveComponent,
      defaultResolveComponent = _ref$defaultResolveCo === void 0 ? identity : _ref$defaultResolveCo,
      _render = _ref.render,
      onLoad = _ref.onLoad;

  function loadable(loadableConstructor, options) {
    if (options === void 0) {
      options = {};
    }

    var ctor = resolveConstructor(loadableConstructor);
    var cache = {};
    /**
     * Cachekey represents the component to be loaded
     * if key changes - component has to be reloaded
     * @param props
     * @returns {null|Component}
     */

    function _getCacheKey(props) {
      if (options.cacheKey) {
        return options.cacheKey(props);
      }

      if (ctor.resolve) {
        return ctor.resolve(props);
      }

      return 'static';
    }
    /**
     * Resolves loaded `module` to a specific `Component
     * @param module
     * @param props
     * @param Loadable
     * @returns Component
     */


    function resolve(module, props, Loadable) {
      var Component = options.resolveComponent ? options.resolveComponent(module, props) : defaultResolveComponent(module);

      if (options.resolveComponent && !(0,react_is__WEBPACK_IMPORTED_MODULE_5__.isValidElementType)(Component)) {
        throw new Error("resolveComponent returned something that is not a React component!");
      }

      hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default()(Loadable, Component, {
        preload: true
      });
      return Component;
    }

    var InnerLoadable =
    /*#__PURE__*/
    function (_React$Component) {
      (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__.default)(InnerLoadable, _React$Component);

      InnerLoadable.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var cacheKey = _getCacheKey(props);

        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__.default)({}, state, {
          cacheKey: cacheKey,
          // change of a key triggers loading state automatically
          loading: state.loading || state.cacheKey !== cacheKey
        });
      };

      function InnerLoadable(props) {
        var _this;

        _this = _React$Component.call(this, props) || this;
        _this.state = {
          result: null,
          error: null,
          loading: true,
          cacheKey: _getCacheKey(props)
        };
        invariant(!props.__chunkExtractor || ctor.requireSync, 'SSR requires `@loadable/babel-plugin`, please install it'); // Server-side

        if (props.__chunkExtractor) {
          // This module has been marked with no SSR
          if (options.ssr === false) {
            return (0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__.default)(_this);
          } // We run load function, we assume that it won't fail and that it
          // triggers a synchronous loading of the module


          ctor.requireAsync(props)["catch"](function () {
            return null;
          }); // So we can require now the module synchronously

          _this.loadSync();

          props.__chunkExtractor.addChunk(ctor.chunkName(props));

          return (0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__.default)(_this);
        } // Client-side with `isReady` method present (SSR probably)
        // If module is already loaded, we use a synchronous loading
        // Only perform this synchronous loading if the component has not
        // been marked with no SSR, else we risk hydration mismatches


        if (options.ssr !== false && ( // is ready - was loaded in this session
        ctor.isReady && ctor.isReady(props) || // is ready - was loaded during SSR process
        ctor.chunkName && LOADABLE_SHARED.initialChunks[ctor.chunkName(props)])) {
          _this.loadSync();
        }

        return _this;
      }

      var _proto = InnerLoadable.prototype;

      _proto.componentDidMount = function componentDidMount() {
        this.mounted = true; // retrieve loading promise from a global cache

        var cachedPromise = this.getCache(); // if promise exists, but rejected - clear cache

        if (cachedPromise && cachedPromise.status === STATUS_REJECTED) {
          this.setCache();
        } // component might be resolved synchronously in the constructor


        if (this.state.loading) {
          this.loadAsync();
        }
      };

      _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        // Component has to be reloaded on cacheKey change
        if (prevState.cacheKey !== this.state.cacheKey) {
          this.loadAsync();
        }
      };

      _proto.componentWillUnmount = function componentWillUnmount() {
        this.mounted = false;
      };

      _proto.safeSetState = function safeSetState(nextState, callback) {
        if (this.mounted) {
          this.setState(nextState, callback);
        }
      }
      /**
       * returns a cache key for the current props
       * @returns {Component|string}
       */
      ;

      _proto.getCacheKey = function getCacheKey() {
        return _getCacheKey(this.props);
      }
      /**
       * access the persistent cache
       */
      ;

      _proto.getCache = function getCache() {
        return cache[this.getCacheKey()];
      }
      /**
       * sets the cache value. If called without value sets it as undefined
       */
      ;

      _proto.setCache = function setCache(value) {
        if (value === void 0) {
          value = undefined;
        }

        cache[this.getCacheKey()] = value;
      };

      _proto.triggerOnLoad = function triggerOnLoad() {
        var _this2 = this;

        if (onLoad) {
          setTimeout(function () {
            onLoad(_this2.state.result, _this2.props);
          });
        }
      }
      /**
       * Synchronously loads component
       * target module is expected to already exists in the module cache
       * or be capable to resolve synchronously (webpack target=node)
       */
      ;

      _proto.loadSync = function loadSync() {
        // load sync is expecting component to be in the "loading" state already
        // sounds weird, but loading=true is the initial state of InnerLoadable
        if (!this.state.loading) return;

        try {
          var loadedModule = ctor.requireSync(this.props);
          var result = resolve(loadedModule, this.props, Loadable);
          this.state.result = result;
          this.state.loading = false;
        } catch (error) {
          console.error('loadable-components: failed to synchronously load component, which expected to be available', {
            fileName: ctor.resolve(this.props),
            chunkName: ctor.chunkName(this.props),
            error: error ? error.message : error
          });
          this.state.error = error;
        }
      }
      /**
       * Asynchronously loads a component.
       */
      ;

      _proto.loadAsync = function loadAsync() {
        var _this3 = this;

        var promise = this.resolveAsync();
        promise.then(function (loadedModule) {
          var result = resolve(loadedModule, _this3.props, {
            Loadable: Loadable
          });

          _this3.safeSetState({
            result: result,
            loading: false
          }, function () {
            return _this3.triggerOnLoad();
          });
        })["catch"](function (error) {
          return _this3.safeSetState({
            error: error,
            loading: false
          });
        });
        return promise;
      }
      /**
       * Asynchronously resolves(not loads) a component.
       * Note - this function does not change the state
       */
      ;

      _proto.resolveAsync = function resolveAsync() {
        var _this4 = this;

        var _this$props = this.props,
            __chunkExtractor = _this$props.__chunkExtractor,
            forwardedRef = _this$props.forwardedRef,
            props = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props, ["__chunkExtractor", "forwardedRef"]);

        var promise = this.getCache();

        if (!promise) {
          promise = ctor.requireAsync(props);
          promise.status = STATUS_PENDING;
          this.setCache(promise);
          promise.then(function () {
            promise.status = STATUS_RESOLVED;
          }, function (error) {
            console.error('loadable-components: failed to asynchronously load component', {
              fileName: ctor.resolve(_this4.props),
              chunkName: ctor.chunkName(_this4.props),
              error: error ? error.message : error
            });
            promise.status = STATUS_REJECTED;
          });
        }

        return promise;
      };

      _proto.render = function render() {
        var _this$props2 = this.props,
            forwardedRef = _this$props2.forwardedRef,
            propFallback = _this$props2.fallback,
            __chunkExtractor = _this$props2.__chunkExtractor,
            props = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_this$props2, ["forwardedRef", "fallback", "__chunkExtractor"]);

        var _this$state = this.state,
            error = _this$state.error,
            loading = _this$state.loading,
            result = _this$state.result;

        if (options.suspense) {
          var cachedPromise = this.getCache() || this.loadAsync();

          if (cachedPromise.status === STATUS_PENDING) {
            throw this.loadAsync();
          }
        }

        if (error) {
          throw error;
        }

        var fallback = propFallback || options.fallback || null;

        if (loading) {
          return fallback;
        }

        return _render({
          fallback: fallback,
          result: result,
          options: options,
          props: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__.default)({}, props, {
            ref: forwardedRef
          })
        });
      };

      return InnerLoadable;
    }((react__WEBPACK_IMPORTED_MODULE_0___default().Component));

    var EnhancedInnerLoadable = withChunkExtractor(InnerLoadable);
    var Loadable = react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function (props, ref) {
      return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(EnhancedInnerLoadable, Object.assign({
        forwardedRef: ref
      }, props));
    });
    Loadable.displayName = 'Loadable'; // In future, preload could use `<link rel="preload">`

    Loadable.preload = function (props) {
      ctor.requireAsync(props);
    };

    Loadable.load = function (props) {
      return ctor.requireAsync(props);
    };

    return Loadable;
  }

  function lazy(ctor, options) {
    return loadable(ctor, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__.default)({}, options, {
      suspense: true
    }));
  }

  return {
    loadable: loadable,
    lazy: lazy
  };
}

function defaultResolveComponent(loadedModule) {
  // eslint-disable-next-line no-underscore-dangle
  return loadedModule.__esModule ? loadedModule["default"] : loadedModule["default"] || loadedModule;
}

/* eslint-disable no-use-before-define, react/no-multi-comp */

var _createLoadable =
/*#__PURE__*/
createLoadable({
  defaultResolveComponent: defaultResolveComponent,
  render: function render(_ref) {
    var Component = _ref.result,
        props = _ref.props;
    return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Component, props);
  }
}),
    loadable = _createLoadable.loadable,
    lazy = _createLoadable.lazy;

/* eslint-disable no-use-before-define, react/no-multi-comp */

var _createLoadable$1 =
/*#__PURE__*/
createLoadable({
  onLoad: function onLoad(result, props) {
    if (result && props.forwardedRef) {
      if (typeof props.forwardedRef === 'function') {
        props.forwardedRef(result);
      } else {
        props.forwardedRef.current = result;
      }
    }
  },
  render: function render(_ref) {
    var result = _ref.result,
        props = _ref.props;

    if (props.children) {
      return props.children(result);
    }

    return null;
  }
}),
    loadable$1 = _createLoadable$1.loadable,
    lazy$1 = _createLoadable$1.lazy;

/* eslint-disable no-underscore-dangle, camelcase */
var BROWSER = typeof window !== 'undefined';
function loadableReady(done, _temp) {
  if (done === void 0) {
    done = function done() {};
  }

  var _ref = _temp === void 0 ? {} : _temp,
      _ref$namespace = _ref.namespace,
      namespace = _ref$namespace === void 0 ? '' : _ref$namespace,
      _ref$chunkLoadingGlob = _ref.chunkLoadingGlobal,
      chunkLoadingGlobal = _ref$chunkLoadingGlob === void 0 ? '__LOADABLE_LOADED_CHUNKS__' : _ref$chunkLoadingGlob;

  if (!BROWSER) {
    warn('`loadableReady()` must be called in browser only');
    done();
    return Promise.resolve();
  }

  var requiredChunks = null;

  if (BROWSER) {
    var id = getRequiredChunkKey(namespace);
    var dataElement = document.getElementById(id);

    if (dataElement) {
      requiredChunks = JSON.parse(dataElement.textContent);
      var extElement = document.getElementById(id + "_ext");

      if (extElement) {
        var _JSON$parse = JSON.parse(extElement.textContent),
            namedChunks = _JSON$parse.namedChunks;

        namedChunks.forEach(function (chunkName) {
          LOADABLE_SHARED.initialChunks[chunkName] = true;
        });
      } else {
        // version mismatch
        throw new Error('loadable-component: @loadable/server does not match @loadable/component');
      }
    }
  }

  if (!requiredChunks) {
    warn('`loadableReady()` requires state, please use `getScriptTags` or `getScriptElements` server-side');
    done();
    return Promise.resolve();
  }

  var resolved = false;
  return new Promise(function (resolve) {
    window[chunkLoadingGlobal] = window[chunkLoadingGlobal] || [];
    var loadedChunks = window[chunkLoadingGlobal];
    var originalPush = loadedChunks.push.bind(loadedChunks);

    function checkReadyState() {
      if (requiredChunks.every(function (chunk) {
        return loadedChunks.some(function (_ref2) {
          var chunks = _ref2[0];
          return chunks.indexOf(chunk) > -1;
        });
      })) {
        if (!resolved) {
          resolved = true;
          resolve();
        }
      }
    }

    loadedChunks.push = function () {
      originalPush.apply(void 0, arguments);
      checkReadyState();
    };

    checkReadyState();
  }).then(done);
}

/* eslint-disable no-underscore-dangle */
var loadable$2 = loadable;
loadable$2.lib = loadable$1;
var lazy$2 = lazy;
lazy$2.lib = lazy$1;
var __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = sharedInternals;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (loadable$2);


 void function register() { /* react-hot-loader/webpack */ var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined; if (!reactHotLoader) { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : exports; /* eslint-enable camelcase, no-undef */ if (!webpackExports) { return; } if (typeof webpackExports === 'function') { reactHotLoader.register(webpackExports, 'module.exports', "/Users/mornya/dev/@Github/react-demo-social/node_modules/@loadable/component/dist/loadable.esm.js"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } reactHotLoader.register(namedExport, key, "/Users/mornya/dev/@Github/react-demo-social/node_modules/@loadable/component/dist/loadable.esm.js"); } }(); 

/***/ }),

/***/ "../../mornya-react-vessel/node_modules/css-loader/dist/runtime/api.js":
/***/ ((module, exports) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join("");
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === "string") {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, ""]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};
 void function register() { /* react-hot-loader/webpack */ var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined; if (!reactHotLoader) { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : exports; /* eslint-enable camelcase, no-undef */ if (!webpackExports) { return; } if (typeof webpackExports === 'function') { reactHotLoader.register(webpackExports, 'module.exports', "/Users/mornya/dev/mornya-react-vessel/node_modules/css-loader/dist/runtime/api.js"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } reactHotLoader.register(namedExport, key, "/Users/mornya/dev/mornya-react-vessel/node_modules/css-loader/dist/runtime/api.js"); } }(); 

/***/ }),

/***/ "../../mornya-react-vessel/node_modules/css-loader/dist/runtime/cssWithMappingToString.js":
/***/ ((module, exports) => {

"use strict";


function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

module.exports = function cssWithMappingToString(item) {
  var _item = _slicedToArray(item, 4),
      content = _item[1],
      cssMapping = _item[3];

  if (typeof btoa === "function") {
    // eslint-disable-next-line no-undef
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join("\n");
  }

  return [content].join("\n");
};
 void function register() { /* react-hot-loader/webpack */ var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined; if (!reactHotLoader) { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : exports; /* eslint-enable camelcase, no-undef */ if (!webpackExports) { return; } if (typeof webpackExports === 'function') { reactHotLoader.register(webpackExports, 'module.exports', "/Users/mornya/dev/mornya-react-vessel/node_modules/css-loader/dist/runtime/cssWithMappingToString.js"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } reactHotLoader.register(namedExport, key, "/Users/mornya/dev/mornya-react-vessel/node_modules/css-loader/dist/runtime/cssWithMappingToString.js"); } }(); 

/***/ }),

/***/ "../../mornya-react-vessel/node_modules/css-loader/dist/runtime/getUrl.js":
/***/ ((module, exports) => {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    // eslint-disable-next-line no-param-reassign
    options = {};
  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign


  url = url && url.__esModule ? url.default : url;

  if (typeof url !== "string") {
    return url;
  } // If url is already wrapped in quotes, remove them


  if (/^['"].*['"]$/.test(url)) {
    // eslint-disable-next-line no-param-reassign
    url = url.slice(1, -1);
  }

  if (options.hash) {
    // eslint-disable-next-line no-param-reassign
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }

  return url;
};
 void function register() { /* react-hot-loader/webpack */ var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined; if (!reactHotLoader) { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : exports; /* eslint-enable camelcase, no-undef */ if (!webpackExports) { return; } if (typeof webpackExports === 'function') { reactHotLoader.register(webpackExports, 'module.exports', "/Users/mornya/dev/mornya-react-vessel/node_modules/css-loader/dist/runtime/getUrl.js"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } reactHotLoader.register(namedExport, key, "/Users/mornya/dev/mornya-react-vessel/node_modules/css-loader/dist/runtime/getUrl.js"); } }(); 

/***/ }),

/***/ "./node_modules/@mornya/react-social-libs/dist/res/share.css":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _mornya_react_vessel_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../../mornya-react-vessel/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _mornya_react_vessel_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mornya_react_vessel_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mornya_react_vessel_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_mornya_react_vessel_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_mornya_react_vessel_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_use_3_mornya_react_vessel_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_4_share_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../../mornya-react-vessel/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../mornya-react-vessel/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!../../mornya-react-vessel/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!../../mornya-react-vessel/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!./node_modules/@mornya/react-social-libs/dist/res/share.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _mornya_react_vessel_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_mornya_react_vessel_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_mornya_react_vessel_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_mornya_react_vessel_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_use_3_mornya_react_vessel_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_4_share_css__WEBPACK_IMPORTED_MODULE_1__.default, options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_mornya_react_vessel_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_mornya_react_vessel_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_mornya_react_vessel_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_use_3_mornya_react_vessel_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_4_share_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});

/***/ }),

/***/ "../../mornya-react-vessel/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : 0;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && typeof btoa !== 'undefined') {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,